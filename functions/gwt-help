# Display help information for all worktree commands.

# Use printf for better control over formatting
  printf "%s\n" "‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïÆ"
  printf "%s\n" "‚îÇ                    üè° Treehouse - Git Worktrees Manager                 ‚îÇ"
  printf "%s\n" "‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ"
  printf "\n"

  printf "${GWT_COLOR_BOLD_CYAN}USAGE${GWT_COLOR_RESET}\n"
  printf "  ${GWT_COLOR_BOLD_WHITE}gwt${GWT_COLOR_RESET} ${GWT_COLOR_YELLOW}<branch>${GWT_COLOR_RESET}           Quick access - create or switch to worktree\n"
  printf "  ${GWT_COLOR_BOLD_WHITE}gwt${GWT_COLOR_RESET} ${GWT_COLOR_YELLOW}<command> [args]${GWT_COLOR_RESET}   Run a specific command\n"
  printf "\n"

  printf "${GWT_COLOR_BOLD_CYAN}COMMANDS${GWT_COLOR_RESET}\n"
  printf "  ${GWT_COLOR_BOLD_WHITE}%-20s${GWT_COLOR_RESET} %s\n" "help" "Show this help message"
  printf "\n"

  printf "  ${GWT_COLOR_CYAN}Worktree Management${GWT_COLOR_RESET}\n"
  printf "  ${GWT_COLOR_BOLD_WHITE}%-20s${GWT_COLOR_RESET} %s\n" "list [--plain]" "List all worktrees (shows locked)"
  printf "  ${GWT_COLOR_BOLD_WHITE}%-20s${GWT_COLOR_RESET} %s\n" "add <branch>" "Create a new worktree"
  printf "    ${GWT_COLOR_YELLOW}%-18s${GWT_COLOR_RESET} %s\n" "--from <base>" "Create from specific branch"
  printf "    ${GWT_COLOR_YELLOW}%-18s${GWT_COLOR_RESET} %s\n" "--track" "Track remote branch"
  printf "    ${GWT_COLOR_YELLOW}%-18s${GWT_COLOR_RESET} %s\n" "--remote" "Create from remote branch (fetch)"
  printf "  ${GWT_COLOR_BOLD_WHITE}%-20s${GWT_COLOR_RESET} %s\n" "switch [branch]" "Switch to a worktree (uses fzf picker)"
  printf "  ${GWT_COLOR_BOLD_WHITE}%-20s${GWT_COLOR_RESET} %s\n" "open [branch]" "Open worktree in editor (uses fzf picker)"
  printf "  ${GWT_COLOR_BOLD_WHITE}%-20s${GWT_COLOR_RESET} %s\n" "rm <branch>" "Remove worktree and branch"
  printf "  ${GWT_COLOR_BOLD_WHITE}%-20s${GWT_COLOR_RESET} %s\n" "prune" "Clean up stale worktree references"
  printf "  ${GWT_COLOR_BOLD_WHITE}%-20s${GWT_COLOR_RESET} %s\n" "mv <old> <new>" "Move/rename a worktree"
  printf "  ${GWT_COLOR_BOLD_WHITE}%-20s${GWT_COLOR_RESET} %s\n" "main" "Navigate to main repository"
  printf "  ${GWT_COLOR_BOLD_WHITE}%-20s${GWT_COLOR_RESET} %s\n" "migrate [opts]" "Convert main repo to worktrees workflow"
  printf "  ${GWT_COLOR_BOLD_WHITE}%-20s${GWT_COLOR_RESET} %s\n" "status [-v]" "Show status of all worktrees"
  printf "  ${GWT_COLOR_BOLD_WHITE}%-20s${GWT_COLOR_RESET} %s\n" "clean [opts]" "Bulk remove worktrees"
  printf "    ${GWT_COLOR_YELLOW}%-18s${GWT_COLOR_RESET} %s\n" "--merged" "Remove merged branches"
  printf "    ${GWT_COLOR_YELLOW}%-18s${GWT_COLOR_RESET} %s\n" "--older-than <n>" "Remove worktrees older than N days"
  printf "    ${GWT_COLOR_YELLOW}%-18s${GWT_COLOR_RESET} %s\n" "--all" "Remove all (with confirmation)"
  printf "    ${GWT_COLOR_YELLOW}%-18s${GWT_COLOR_RESET} %s\n" "--include-archived" "Also clean archived worktrees"
  printf "    ${GWT_COLOR_YELLOW}%-18s${GWT_COLOR_RESET} %s\n" "--dry-run" "Preview without removing"
  printf "\n"

  printf "  ${GWT_COLOR_CYAN}GitHub Integration${GWT_COLOR_RESET}\n"
  printf "  ${GWT_COLOR_BOLD_WHITE}%-20s${GWT_COLOR_RESET} %s\n" "pr <number>" "Create worktree from PR number"
  printf "  ${GWT_COLOR_BOLD_WHITE}%-20s${GWT_COLOR_RESET} %s\n" "diff <br1> <br2>" "Compare two worktrees"
  printf "\n"

  printf "  ${GWT_COLOR_CYAN}Advanced Features${GWT_COLOR_RESET}\n"
  printf "  ${GWT_COLOR_BOLD_WHITE}%-20s${GWT_COLOR_RESET} %s\n" "stash-list" "List stashes across all worktrees"
  printf "  ${GWT_COLOR_BOLD_WHITE}%-20s${GWT_COLOR_RESET} %s\n" "archive <branch>" "Archive a worktree (hide from list)"
  printf "  ${GWT_COLOR_BOLD_WHITE}%-20s${GWT_COLOR_RESET} %s\n" "unarchive <branch>" "Restore archived worktree"
  printf "  ${GWT_COLOR_BOLD_WHITE}%-20s${GWT_COLOR_RESET} %s\n" "archives" "List archived worktrees"
  printf "\n"

  printf "  ${GWT_COLOR_CYAN}Worktree Protection${GWT_COLOR_RESET}\n"
  printf "  ${GWT_COLOR_BOLD_WHITE}%-20s${GWT_COLOR_RESET} %s\n" "lock [branch]" "Lock worktree to prevent removal"
  printf "  ${GWT_COLOR_BOLD_WHITE}%-20s${GWT_COLOR_RESET} %s\n" "unlock <branch>" "Unlock worktree to allow removal"
  printf "  ${GWT_COLOR_BOLD_WHITE}%-20s${GWT_COLOR_RESET} %s\n" "locks" "List all locked worktrees"
  printf "\n"

  printf "  ${GWT_COLOR_CYAN}File Ignoring${GWT_COLOR_RESET}\n"
  printf "  ${GWT_COLOR_BOLD_WHITE}%-20s${GWT_COLOR_RESET} %s\n" "ignore <file>" "Ignore local changes to tracked files"
  printf "  ${GWT_COLOR_BOLD_WHITE}%-20s${GWT_COLOR_RESET} %s\n" "unignore <file>" "Stop ignoring file changes"
  printf "  ${GWT_COLOR_BOLD_WHITE}%-20s${GWT_COLOR_RESET} %s\n" "ignored" "List skip-worktree files"
  printf "  ${GWT_COLOR_BOLD_WHITE}%-20s${GWT_COLOR_RESET} %s\n" "excludes <pattern>" "Add pattern to .git/info/exclude"
  printf "  ${GWT_COLOR_BOLD_WHITE}%-20s${GWT_COLOR_RESET} %s\n" "excludes-list" "List local exclude patterns"
  printf "  ${GWT_COLOR_BOLD_WHITE}%-20s${GWT_COLOR_RESET} %s\n" "excludes-edit" "Edit .git/info/exclude directly"
  printf "\n"

  printf "${GWT_COLOR_BOLD_CYAN}EXAMPLES${GWT_COLOR_RESET}\n"
  printf "  ${GWT_COLOR_CYAN}# Basic usage${GWT_COLOR_RESET}\n"
  printf "  ${GWT_COLOR_GREEN}gwt main${GWT_COLOR_RESET}                      # Switch to main branch worktree\n"
  printf "  ${GWT_COLOR_GREEN}gwt feature-auth${GWT_COLOR_RESET}              # Create and switch to feature-auth\n"
  printf "  ${GWT_COLOR_GREEN}gwt add fix-bug --from main${GWT_COLOR_RESET}   # Create from main branch\n"
  printf "  ${GWT_COLOR_GREEN}gwt switch${GWT_COLOR_RESET}                    # Interactive picker (requires fzf)\n"
  printf "  ${GWT_COLOR_GREEN}gwt status${GWT_COLOR_RESET}                    # Show status of all worktrees\n"
  printf "\n"

  printf "  ${GWT_COLOR_CYAN}# Cleanup${GWT_COLOR_RESET}\n"
  printf "  ${GWT_COLOR_GREEN}gwt clean --merged${GWT_COLOR_RESET}            # Remove merged branches\n"
  printf "  ${GWT_COLOR_GREEN}gwt clean --older-than 30${GWT_COLOR_RESET}     # Remove worktrees older than 30 days\n"
  printf "\n"

  printf "  ${GWT_COLOR_CYAN}# GitHub integration${GWT_COLOR_RESET}\n"
  printf "  ${GWT_COLOR_GREEN}gwt pr 123${GWT_COLOR_RESET}                    # Create worktree from PR #123\n"
  printf "  ${GWT_COLOR_GREEN}gwt diff main feature-auth${GWT_COLOR_RESET}    # Compare two branches\n"
  printf "\n"

  printf "  ${GWT_COLOR_CYAN}# Protection & archiving${GWT_COLOR_RESET}\n"
  printf "  ${GWT_COLOR_GREEN}gwt lock main${GWT_COLOR_RESET}                 # Lock main branch to prevent removal\n"
  printf "  ${GWT_COLOR_GREEN}gwt archive old-feature${GWT_COLOR_RESET}       # Archive a worktree\n"
  printf "\n"

  printf "${GWT_COLOR_BOLD_CYAN}CONFIGURATION${GWT_COLOR_RESET}\n"
  printf "  ${GWT_COLOR_BOLD_WHITE}%-20s${GWT_COLOR_RESET} Base directory for worktrees\n" "GWT_ROOT"
  printf "  %-20s Default: ${GWT_COLOR_DIM}\$HOME/.worktrees${GWT_COLOR_RESET}\n" ""
  printf "\n"
  printf "  ${GWT_COLOR_BOLD_WHITE}%-20s${GWT_COLOR_RESET} Editor command (code, nvim, idea, etc.)\n" "GWT_OPEN_CMD"
  printf "  %-20s Default: ${GWT_COLOR_DIM}code${GWT_COLOR_RESET}\n" ""
  printf "\n"
  printf "  ${GWT_COLOR_BOLD_WHITE}%-20s${GWT_COLOR_RESET} Auto-create/attach tmux sessions (0 or 1)\n" "GWT_USE_TMUX"
  printf "  %-20s Default: ${GWT_COLOR_DIM}0 (disabled)${GWT_COLOR_RESET}\n" ""
  printf "\n"
  printf "  ${GWT_COLOR_BOLD_WHITE}%-20s${GWT_COLOR_RESET} Auto-create .envrc files (0 or 1)\n" "GWT_DIR_ENVRC"
  printf "  %-20s Default: ${GWT_COLOR_DIM}0 (disabled)${GWT_COLOR_RESET}\n" ""
  printf "\n"
  printf "  ${GWT_COLOR_BOLD_WHITE}%-20s${GWT_COLOR_RESET} Auto-prune after removal (0 or 1)\n" "GWT_PRUNE_ON_RM"
  printf "  %-20s Default: ${GWT_COLOR_DIM}1 (enabled)${GWT_COLOR_RESET}\n" ""
  printf "\n"

  printf "${GWT_COLOR_DIM}Treehouse v0.1.0 | https://github.com/linnjs/treehouse${GWT_COLOR_RESET}\n"
